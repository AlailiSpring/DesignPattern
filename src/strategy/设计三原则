1、找出应用中可能需要变化之处，把它们独立出来，不要和那些不需要变化的代码混在一起
2、针对接口编程，而不是针对实现编程
3、多用组合，少用继承
           --类中应当多用业务抽离出来的接口方法，方便不同业务的组合，同时方便后期业务的扩展
           --少用继承，继承本身就是紧耦合的实现，缺少业务上的伸缩，增加了后期的维护和扩展困难

关于策略模式的概括：
         1）官方黑话：定义一组算法，分别封装起来，并且让它们之间可以相互替换（通过set方法去注入）
         ，此模式可以让算法的变化独立于使用这些接口的客户
         2）人话：策略模式是对算法的包装，把使用算法的责任和算法本身分隔开，委派给不同的对象管理。
         策略模式通常把一系列的算法包装到一系列的策略类里面，作为一个抽象策略类的子类。